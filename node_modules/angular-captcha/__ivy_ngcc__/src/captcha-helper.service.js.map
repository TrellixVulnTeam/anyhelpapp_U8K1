{"version":3,"file":"captcha-helper.service.js","sources":["captcha-helper.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAGM;AACN;AACA;AACA;AACA;AACA;;;;;oGAAS;AACT;AACA;AACA;AACA","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar CaptchaHelperService = /** @class */ (function () {\r\n    function CaptchaHelperService(http, ngZone) {\r\n        this.http = http;\r\n        this.ngZone = ngZone;\r\n    }\r\n    // get script and execute it immediately\r\n    CaptchaHelperService.prototype.getScript = function (url) {\r\n        var _this = this;\r\n        this.http.get(url, { responseType: 'text' })\r\n            .subscribe(function (scriptString) {\r\n            var f = new Function(scriptString);\r\n            _this.ngZone.runOutsideAngular(function () {\r\n                f();\r\n            });\r\n        });\r\n    };\r\n    CaptchaHelperService.prototype.useUserInputBlurValidation = function (userInput) {\r\n        return (userInput.getAttribute('correctCaptcha') !== null);\r\n    };\r\n    // get captcha endpoint handler from configued captchaEndpoint value,\r\n    // the result can be \"simple-captcha-endpoint.ashx\", \"simple-captcha-endpoint\",\r\n    // or \"simple-botdetect.php\"\r\n    CaptchaHelperService.prototype.getCaptchaEndpointHandler = function (captchaEndpoint) {\r\n        var splited = captchaEndpoint.split('/');\r\n        return splited[splited.length - 1];\r\n    };\r\n    // get backend base url from configued captchaEndpoint value\r\n    CaptchaHelperService.prototype.getBackendBaseUrl = function (captchaEndpoint, captchaEndpointHandler) {\r\n        var lastIndex = captchaEndpoint.lastIndexOf(captchaEndpointHandler);\r\n        return captchaEndpoint.substring(0, lastIndex);\r\n    };\r\n    // change relative to absolute urls in captcha html markup\r\n    CaptchaHelperService.prototype.changeRelativeToAbsoluteUrls = function (originCaptchaHtml, captchaEndpoint) {\r\n        var captchaEndpointHandler = this.getCaptchaEndpointHandler(captchaEndpoint);\r\n        var backendUrl = this.getBackendBaseUrl(captchaEndpoint, captchaEndpointHandler);\r\n        originCaptchaHtml = originCaptchaHtml.replace(/<script.*<\\/script>/g, '');\r\n        var relativeUrls = originCaptchaHtml.match(/(src|href)=\\\"([^\"]+)\\\"/g);\r\n        var relativeUrl, relativeUrlPrefixPattern, absoluteUrl, changedCaptchaHtml = originCaptchaHtml;\r\n        for (var i = 0; i < relativeUrls.length; i++) {\r\n            relativeUrl = relativeUrls[i].slice(0, -1).replace(/src=\\\"|href=\\\"/, '');\r\n            relativeUrlPrefixPattern = new RegExp(\".*\" + captchaEndpointHandler);\r\n            absoluteUrl = relativeUrl.replace(relativeUrlPrefixPattern, backendUrl + captchaEndpointHandler);\r\n            changedCaptchaHtml = changedCaptchaHtml.replace(relativeUrl, absoluteUrl);\r\n        }\r\n        return changedCaptchaHtml;\r\n    };\r\n    CaptchaHelperService.decorators = [\r\n        { type: core_1.Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    CaptchaHelperService.ctorParameters = function () { return [\r\n        { type: http_1.HttpClient, },\r\n        { type: core_1.NgZone, },\r\n    ]; };\r\n    return CaptchaHelperService;\r\n}());\r\nexports.CaptchaHelperService = CaptchaHelperService;\r\n"]}