{"version":3,"file":"correct-captcha.directive.js","sources":["correct-captcha.directive.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAYM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AACN;AACA;AACA;AACA","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar captcha_service_1 = require(\"./captcha.service\");\r\nvar CorrectCaptchaDirective = /** @class */ (function () {\r\n    function CorrectCaptchaDirective(captchaService) {\r\n        this.captchaService = captchaService;\r\n    }\r\n    CorrectCaptchaDirective.prototype.validate = function (c, onBlur) {\r\n        var _this = this;\r\n        if (c) {\r\n            // cache the control for using on blur\r\n            this.control = c;\r\n        }\r\n        return new Promise(function (resolve) {\r\n            // the control should have incorrect status first\r\n            resolve({ incorrectCaptcha: true });\r\n            // we only validate the captcha on blur\r\n            if (onBlur) {\r\n                var captchaCode = _this.captchaService.botdetectInstance.userInput.value;\r\n                if (captchaCode) {\r\n                    _this.captchaService.validateUnsafe(captchaCode)\r\n                        .subscribe(function (isHuman) {\r\n                        if (!isHuman) {\r\n                            // ui captcha validation failed\r\n                            _this.captchaService.botdetectInstance.reloadImage();\r\n                            _this.control = null;\r\n                        }\r\n                        else {\r\n                            // ui captcha validation passed\r\n                            _this.control.setErrors(null);\r\n                        }\r\n                    }, function (error) {\r\n                        throw new Error(error);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    CorrectCaptchaDirective.prototype.onBlur = function () {\r\n        this.validate(undefined, true);\r\n    };\r\n    CorrectCaptchaDirective.decorators = [\r\n        { type: core_1.Directive, args: [{\r\n                    selector: '[correctCaptcha][formControlName],[correctCaptcha][formControl],[correctCaptcha][ngModel]',\r\n                    providers: [\r\n                        {\r\n                            provide: forms_1.NG_ASYNC_VALIDATORS,\r\n                            useExisting: core_1.forwardRef(function () { return CorrectCaptchaDirective; }),\r\n                            multi: true\r\n                        }\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    CorrectCaptchaDirective.ctorParameters = function () { return [\r\n        { type: captcha_service_1.CaptchaService, },\r\n    ]; };\r\n    CorrectCaptchaDirective.propDecorators = {\r\n        'onBlur': [{ type: core_1.HostListener, args: ['blur',] },],\r\n    };\r\n    return CorrectCaptchaDirective;\r\n}());\r\nexports.CorrectCaptchaDirective = CorrectCaptchaDirective;\r\n"]}